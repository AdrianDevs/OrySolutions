version: "3.9"

services:
  # oathkeeper:
  #   container_name: oathkeeper
  #   image: oryd/oathkeeper:v0.40.3
  #   # depends_on:
  #   #   - kratos
  #   ports:
  #     - 8080:4455  # run the oathkeeper proxy at port 4455
  #     - 4456:4456  # run the oathkeeper api at port 4456
  #   command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
  #   environment:
  #     - LOG_LEVEL=debug
  #   restart: on-failure
  #   volumes:
  #     - type: bind
  #       source: ./config/oathkeeper  # the path to the directory on the host machine
  #       target: /etc/config/oathkeeper  # the path where the directory is mounted in the container
  #     # - ./config/oathkeeper:/etc/config/oathkeeper
  #   networks:
  #     - internal

  kratos-db:
    container_name: kratos-db
    image: postgres:14.2
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${KRATOS_DB_USER}
      - POSTGRES_PASSWORD=${KRATOS_DB_PASSWORD}
      - POSTGRES_DB=${KRATOS_DB_NAME}
    volumes:
      # - type: volume
      #   source: kratos_db  # name of the volume
      #   target: /var/lib/postgresql/data  # the path where the volume is mounted in the container
      #   read_only: false
      - kratos_db:/var/lib/postgresql/data
    networks:
      - internal

  kratos-migrate:
    container_name: kratos-migrate
    image: oryd/kratos:v0.13.0
    links:
      - kratos-db:kratos-database
    environment:
      - DSN=postgres://${KRATOS_DB_USER}:${KRATOS_DB_PASSWORD}@kratos-db:5432/${KRATOS_DB_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    networks:
      - internal
    volumes:
      - kratos-migrate:/home/ory
      - kratos-migrate:/etc/config/kratos
      - kratos-migrate:/var/lib/sqlite
      - ./config/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes

  kratos:
    container_name: kratos
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.13.0
    environment:
      - DSN=postgres://${KRATOS_DB_USER}:${KRATOS_DB_PASSWORD}@kratos-db:5432/${KRATOS_DB_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    ports:
      - '4433:4433' # Public API            # TODO REMOVE THIS ONCE READY
      - '4434:4434' # Private Admin API     # TODO REMOVE THIS ONCE READY
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - kratos-migrate:/home/ory
      - kratos-migrate:/etc/config/kratos
      - kratos-migrate:/var/lib/sqlite
      - ./config/kratos:/etc/config/kratos
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - '8025:8025'  # HTTP server
      - '1025:1025'  # SMTP server
    networks:
      - internal

  # web-api-go:
  #   container_name: web-api-go
  #   build:
  #     context: .
  #     dockerfile: web-api-go-dockerfile
  #   # ports:
  #   #   - 3000:8090
  #   networks:
  #     - internal

volumes:
  kratos-migrate:
  kratos_db:

networks:
  # everything that is *only* on "internal network" cannot talk to WAN
  internal:
    external: false
  # add this network to a container to make it talk to the rest of the world
  # frontend:
  #   external: true





# prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   # depends_on:
  #   #   - oathkeeper
  #   ports:
  #     - 9090:9090
  #   command:
  #     - '--config.file=/etc/config/prometheus/prometheus.yml'
  #   environment:
  #     - LOG_LEVEL=debug
  #   restart: on-failure
  #   networks:
  #     - intranet
  #   volumes:
  #     - ./prometheus:/etc/config/prometheus
  #     - prom_data:/prometheus

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - 3000:3000
  #   restart: unless-stopped
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=grafana
  #   volumes:
  #     - ./grafana:/etc/config/grafana/provisioning/datasources



  # http://127.0.0.1:4433/self-service/login/browser
  # http://kratos:4455/self-service/login/browser